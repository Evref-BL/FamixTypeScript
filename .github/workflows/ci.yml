# Name of the project in the GitHub action panel
name: Run-Tests-and-Generate-Model-Diagram

# Execute the CI on push on the master branch
on:
  push:
    branches: 
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # List of images at https://github.com/hpi-swa/smalltalkCI#images
        # Use Moose 10 that includes our visualization tool
        smalltalk: [ Moose64-11]
    name: ${{ matrix.smalltalk }}
    steps:
        # checkout the project
      - uses: actions/checkout@v4
      
        # Prepare the CI - download the correct VM :-) 
      - uses: hpi-swa/setup-smalltalkCI@v1
        with:
          smalltalk-image: ${{ matrix.smalltalk }}
      
        # Use the CI - always better to run test
      - run: smalltalkci -s ${{ matrix.smalltalk }}
        shell: bash
        timeout-minutes: 15
        
      - name: Generate plantuml representation of meta-model
        run: |
          $SMALLTALK_CI_VM  $SMALLTALK_CI_IMAGE eval "'FamixTypeScript.puml' asFileReference writeStreamDo: [ :stream | stream nextPutAll:  (FamixMMUMLDocumentor new withModel: FamixTypeScriptModel andColor: Color lightBlue ; beWithStub; generatePlantUMLModel)]"
      
      - name: Generate SVG Diagram from PlantUML
        uses: Timmy/plantuml-action@v1
        with:
          args: -v -tsvg FamixTypeScript.puml
          
      - name: Move diagram to doc space
        run: |
          mkdir -p doc-uml
          mv *.svg doc-uml
          
      - name: Push docs to current branch
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add doc-uml
          git commit -m "Update docs for branch ${{ github.ref_name }}"
          git push origin ${{ github.ref_name }}  
